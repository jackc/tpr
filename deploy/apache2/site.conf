# Use Apache 2 to serve static assets and proxy api requests to tpr
#
# Set port ot 80 and remove the SSL lines to be insecure
# proxy_http module must be available (on debian/ubuntu a2enmod proxy_http)
# rewrite module must be available (on debian/ubuntu a2enmod rewrite)
# ssl module must be available (on debian/ubuntu a2enmod ssl)
<VirtualHost *:443>
  ServerAdmin name@example.com
  ServerName tpr.example.com

  SSLEngine On
  SSLCertificateFile /etc/ssl/certs/tpr.crt
  SSLCertificateKeyFile /etc/ssl/private/tpr.key

  ProxyRequests off
  ProxyPass /api http://127.0.0.1:4000/api
  ProxyPassReverse /api http://127.0.0.1:4000/api

  # Compress API responses
  <Location /api>
    SetOutputFilter DEFLATE
  </Location>

  DocumentRoot /usr/share/tpr/assets
  <Directory /usr/share/tpr/assets>
    RewriteEngine On

    Order Allow,Deny
    Allow from all
    AllowOverride None
    Options FollowSymLinks

    # Cache assets for 30 days
    <FilesMatch "\.(css|js)(\.gz)?$">
      Header set Cache-Control "max-age=2592000, public"
    </FilesMatch>

    # Always require validating HTML
    <FilesMatch "\.html(\.gz)?$">
      Header set Cache-Control "max-age=0, must-revalidate"
    </FilesMatch>

    # Serve pre-compressed assets
    RewriteCond %{HTTP:Accept-encoding} gzip
    RewriteRule ^(.*)\.css $1\.css\.gz [QSA]
    RewriteRule \.css\.gz$ - [T=text/css,E=no-gzip:1]

    RewriteCond %{HTTP:Accept-encoding} gzip
    RewriteRule ^(.*)\.js $1\.js\.gz [QSA]
    RewriteRule \.js\.gz$ - [T=text/javascript,E=no-gzip:1]

    RewriteCond %{HTTP:Accept-encoding} gzip
    RewriteRule ^(.*)\.html $1\.html\.gz [QSA]
    RewriteRule \.html\.gz$ - [T=text/html,E=no-gzip:1]

    # Set Content-Encoding on the files we told mod_deflate not to gzip
    Header set Content-Encoding gzip env=no-gzip
  </Directory>
</VirtualHost>
